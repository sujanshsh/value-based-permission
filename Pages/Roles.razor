@page "/roles"
@attribute [Microsoft.AspNetCore.Authorization.Authorize]

<MudPaper Width="100%" Style="margin: 10px;">
    <MudDialog @bind-IsVisible="createDialogOpened">
        <TitleContent>Create A Role</TitleContent>
        <DialogContent>
            <MudTextField T="string" Label="Name" @bind-Value="newRole.name"/>
            <MudTextField T="string" Label="Description" @bind-Value="newRole.description" Style="width: 300px;"/>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
            <MudButton Color="Color.Primary" OnClick="OnSubmitRole">Create</MudButton>
        </DialogActions>
    </MudDialog>
    <MudContainer>
        <MudGrid>
            <MudItem xs="3">
                <MudText Typo="Typo.h3">Roles</MudText>
            </MudItem>
            <MudItem xs="3">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OnCreateRole">Create Role</MudButton>
            </MudItem>
            <MudItem xs="12">
                <RolesTable RolesData="roles" Loading="@loadingRoles">
                </RolesTable>
            </MudItem>
        </MudGrid>
    </MudContainer>
</MudPaper>

@code {
    private Models.Role[] roles = new Models.Role[0];

    public Models.Role newRole = new Models.Role();

    private bool loadingRoles = false;

    [Inject]
    private HttpClient httpClient { get; set; }

    private bool createDialogOpened = false;
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }


    private async Task loadRoles()
    {
        loadingRoles = true;
        try
        {
            roles = await httpClient.GetFromJsonAsync<Models.Role[]>("roles");
        }
        catch
        {
            loadingRoles = false;
        }
        loadingRoles = false;
    }
    protected override async Task OnInitializedAsync()
    {
        await loadRoles();
    }

    private void Cancel() => createDialogOpened = false;

    private void OnCreateRole()
    {
        createDialogOpened = true;
    }

    private async Task OnSubmitRole()
    {
        if (newRole.name != "" && newRole.description != "")
        {
            try
            {
                await httpClient.PostAsJsonAsync<Models.Role>("roles", newRole);
            }
            catch
            {
                return;
            }
            await loadRoles();
        }
        createDialogOpened = false;
    }
}
